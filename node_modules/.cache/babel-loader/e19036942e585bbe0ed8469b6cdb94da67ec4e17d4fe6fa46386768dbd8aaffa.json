{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reena\\\\Desktop\\\\web-monitoring\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport StatsPanel from \"components/StatsPanel\";\nimport ChartCard from \"components/ChartCard\";\nimport ServerList from \"components/ServerList\";\nimport { fetchServers, fetchAlertCounts, fetchServerMetrics } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [alerts, setAlerts] = useState({\n    critical: 0,\n    medium: 0,\n    low: 0\n  });\n  const [resourceUsage, setResourceUsage] = useState([]);\n  const [networkTraffic, setNetworkTraffic] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const serverData = await fetchServers();\n        setServers(serverData);\n        const alertCounts = await fetchAlertCounts();\n        setAlerts(alertCounts);\n        const metrics = await fetchServerMetrics(1); // Assuming server ID 1\n        setResourceUsage([{\n          name: \"CPU\",\n          data: metrics.cpu_usage\n        }, {\n          name: \"RAM\",\n          data: metrics.ram_usage\n        }, {\n          name: \"Disk\",\n          data: metrics.disk_usage\n        }, {\n          name: \"Application\",\n          data: metrics.application_usage\n        }]);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"Failed to fetch data. Please try again later.\");\n      }\n    };\n    fetchData();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(StatsPanel, {\n        alerts: alerts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Resource Monitoring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.grid,\n          children: [/*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"CPU Usage\",\n            type: \"line\",\n            data: resourceUsage,\n            dataKey: \"cpu\",\n            color: \"#3498db\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"RAM Usage\",\n            type: \"line\",\n            data: resourceUsage,\n            dataKey: \"ram\",\n            color: \"#27ae60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"Disk Usage\",\n            type: \"bar\",\n            data: resourceUsage,\n            dataKey: \"disk\",\n            color: \"#e74c3c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"Network Traffic\",\n            type: \"line\",\n            data: networkTraffic,\n            dataKey: \"incoming\",\n            color: \"#9b59b6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Server Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ServerList, {\n          servers: servers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WvgLc4o3qsVDnuEDrP/fJZ7pTwo=\");\n_c = App;\nconst styles = {\n  container: {\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    padding: \"2rem\"\n  },\n  content: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\"\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    gap: \"1rem\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","StatsPanel","ChartCard","ServerList","fetchServers","fetchAlertCounts","fetchServerMetrics","jsxDEV","_jsxDEV","App","_s","servers","setServers","alerts","setAlerts","critical","medium","low","resourceUsage","setResourceUsage","networkTraffic","setNetworkTraffic","error","setError","fetchData","serverData","alertCounts","metrics","name","data","cpu_usage","ram_usage","disk_usage","application_usage","console","style","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","styles","container","content","grid","title","type","dataKey","_c","minHeight","backgroundColor","padding","maxWidth","margin","display","gridTemplateColumns","gap","$RefreshReg$"],"sources":["C:/Users/Reena/Desktop/web-monitoring/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport StatsPanel from \"components/StatsPanel\";\nimport ChartCard from \"components/ChartCard\";\nimport ServerList from \"components/ServerList\";\nimport { fetchServers, Server, fetchAlertCounts, fetchServerMetrics } from \"./services/api\";\n\ninterface AlertCounts {\n  critical: number;\n  medium: number;\n  low: number;\n}\n\nconst App: React.FC = () => {\n  const [servers, setServers] = useState<Server[]>([]);\n  const [alerts, setAlerts] = useState<AlertCounts>({\n    critical: 0,\n    medium: 0,\n    low: 0,\n  });\n  const [resourceUsage, setResourceUsage] = useState<any[]>([]);\n  const [networkTraffic, setNetworkTraffic] = useState<any[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const serverData = await fetchServers();\n        setServers(serverData);\n\n        const alertCounts = await fetchAlertCounts();\n        setAlerts(alertCounts);\n\n        const metrics = await fetchServerMetrics(1); // Assuming server ID 1\n        setResourceUsage([\n          { name: \"CPU\", data: metrics.cpu_usage },\n          { name: \"RAM\", data: metrics.ram_usage },\n          { name: \"Disk\", data: metrics.disk_usage },\n          { name: \"Application\", data: metrics.application_usage },\n        ]);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setError(\"Failed to fetch data. Please try again later.\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (error) {\n    return <div style={{ color: \"red\", textAlign: \"center\" }}>{error}</div>;\n  }\n\n  return (\n    <div style={styles.container}>\n      <Header />\n      <main style={styles.content}>\n        <StatsPanel alerts={alerts} />\n        <section>\n          <h2>Resource Monitoring</h2>\n          <div style={styles.grid}>\n            <ChartCard\n              title=\"CPU Usage\"\n              type=\"line\"\n              data={resourceUsage}\n              dataKey=\"cpu\"\n              color=\"#3498db\"\n            />\n            <ChartCard\n              title=\"RAM Usage\"\n              type=\"line\"\n              data={resourceUsage}\n              dataKey=\"ram\"\n              color=\"#27ae60\"\n            />\n            <ChartCard\n              title=\"Disk Usage\"\n              type=\"bar\"\n              data={resourceUsage}\n              dataKey=\"disk\"\n              color=\"#e74c3c\"\n            />\n            <ChartCard\n              title=\"Network Traffic\"\n              type=\"line\"\n              data={networkTraffic}\n              dataKey=\"incoming\"\n              color=\"#9b59b6\"\n            />\n          </div>\n        </section>\n\n        <section>\n          <h2>Server Status</h2>\n          <ServerList servers={servers} />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    padding: \"2rem\",\n  },\n  content: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    gap: \"1rem\",\n  },\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}