{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\";\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Example: Fetch all servers\nexport const fetchServers = async () => {\n  const response = await api.get(\"/servers\");\n  return response.data;\n};\n\n// Example: Fetch metrics for a specific server\nexport const fetchServerMetrics = async (serverId, hours = 24) => {\n  const response = await api.get(`/metrics/server/${serverId}/metrics`, {\n    params: {\n      hours\n    }\n  });\n  return response.data;\n};\n\n// Example: Fetch alert counts\nexport const fetchAlertCounts = async () => {\n  const response = await api.get(\"/alerts/counts\");\n  return response.data;\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","fetchServers","response","get","data","fetchServerMetrics","serverId","hours","params","fetchAlertCounts"],"sources":["C:/Users/Reena/Desktop/web-monitoring/server-monitoring-dashboard/src/services/api.ts"],"sourcesContent":["import axios from \"axios\";\r\nimport { ServerInfo } from \"../types/index\";\r\n\r\nconst API_BASE_URL = \"http://127.0.0.1:8000/api\";\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Example: Fetch all servers\r\nexport const fetchServers = async (): Promise<ServerInfo[]> => {\r\n  const response = await api.get<ServerInfo[]>(\"/servers\");\r\n  return response.data;\r\n};\r\n\r\n// Example: Fetch metrics for a specific server\r\nexport const fetchServerMetrics = async (\r\n  serverId: number,\r\n  hours: number = 24\r\n) => {\r\n  const response = await api.get(`/metrics/server/${serverId}/metrics`, {\r\n    params: { hours },\r\n  });\r\n  return response.data;\r\n};\r\n\r\n// Example: Fetch alert counts\r\nexport const fetchAlertCounts = async (): Promise<{ critical: number; medium: number; low: number }> => {\r\n  const response = await api.get<{ critical: number; medium: number; low: number }>(\"/alerts/counts\");\r\n  return response.data;\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAmC;EAC7D,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAe,UAAU,CAAC;EACxD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAAA,CAChCC,QAAgB,EAChBC,KAAa,GAAG,EAAE,KACf;EACH,MAAML,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAC,mBAAmBG,QAAQ,UAAU,EAAE;IACpEE,MAAM,EAAE;MAAED;IAAM;EAClB,CAAC,CAAC;EACF,OAAOL,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMK,gBAAgB,GAAG,MAAAA,CAAA,KAAwE;EACtG,MAAMP,QAAQ,GAAG,MAAML,GAAG,CAACM,GAAG,CAAoD,gBAAgB,CAAC;EACnG,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}