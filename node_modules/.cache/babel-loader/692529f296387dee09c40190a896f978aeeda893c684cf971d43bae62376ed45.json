{"ast":null,"code":"export const alerts = [{\n  level: \"critical\",\n  count: 3\n}, {\n  level: \"medium\",\n  count: 7\n}, {\n  level: \"low\",\n  count: 12\n}];\nexport const servers = [{\n  id: \"1\",\n  name: \"Production Server 1\",\n  status: \"online\",\n  ip: \"192.168.1.100\",\n  location: \"New York\",\n  lastUpdated: \"2024-03-20 10:30:00\"\n}, {\n  id: \"2\",\n  name: \"Production Server 2\",\n  status: \"warning\",\n  ip: \"192.168.1.101\",\n  location: \"London\",\n  lastUpdated: \"2024-03-20 10:29:45\"\n}, {\n  id: \"3\",\n  name: \"Backup Server 1\",\n  status: \"offline\",\n  ip: \"192.168.1.102\",\n  location: \"Singapore\",\n  lastUpdated: \"2024-03-20 10:28:30\"\n}];\nexport const resourceUsage = Array.from({\n  length: 24\n}, (_, i) => ({\n  timestamp: `2024-03-20 ${String(i).padStart(2, \"0\")}:00:00`,\n  cpu: Math.random() * 100,\n  ram: Math.random() * 100,\n  disk: Math.random() * 100\n}));\nexport const networkTraffic = Array.from({\n  length: 24\n}, (_, i) => ({\n  timestamp: `2024-03-20 ${String(i).padStart(2, \"0\")}:00:00`,\n  incoming: Math.random() * 1000,\n  outgoing: Math.random() * 800\n}));","map":{"version":3,"names":["alerts","level","count","servers","id","name","status","ip","location","lastUpdated","resourceUsage","Array","from","length","_","i","timestamp","String","padStart","cpu","Math","random","ram","disk","networkTraffic","incoming","outgoing"],"sources":["C:/Users/Reena/Desktop/web-monitoring/src/data/mockData.ts"],"sourcesContent":["export interface Alert {\r\n  level: \"critical\" | \"medium\" | \"low\";\r\n  count: number;\r\n}\r\n\r\nexport interface ServerInfo {\r\n  id: string;\r\n  name: string;\r\n  status: \"online\" | \"offline\" | \"warning\";\r\n  ip: string;\r\n  location: string;\r\n  lastUpdated: string;\r\n}\r\n\r\nexport interface ResourceUsage {\r\n  timestamp: string;\r\n  cpu: number;\r\n  ram: number;\r\n  disk: number;\r\n}\r\n\r\nexport interface NetworkTraffic {\r\n  timestamp: string;\r\n  incoming: number;\r\n  outgoing: number;\r\n}\r\n\r\nexport const alerts: Alert[] = [\r\n  { level: \"critical\", count: 3 },\r\n  { level: \"medium\", count: 7 },\r\n  { level: \"low\", count: 12 },\r\n];\r\n\r\nexport const servers: ServerInfo[] = [\r\n  {\r\n    id: \"1\",\r\n    name: \"Production Server 1\",\r\n    status: \"online\",\r\n    ip: \"192.168.1.100\",\r\n    location: \"New York\",\r\n    lastUpdated: \"2024-03-20 10:30:00\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    name: \"Production Server 2\",\r\n    status: \"warning\",\r\n    ip: \"192.168.1.101\",\r\n    location: \"London\",\r\n    lastUpdated: \"2024-03-20 10:29:45\",\r\n  },\r\n  {\r\n    id: \"3\",\r\n    name: \"Backup Server 1\",\r\n    status: \"offline\",\r\n    ip: \"192.168.1.102\",\r\n    location: \"Singapore\",\r\n    lastUpdated: \"2024-03-20 10:28:30\",\r\n  },\r\n];\r\n\r\nexport const resourceUsage: ResourceUsage[] = Array.from(\r\n  { length: 24 },\r\n  (_, i) => ({\r\n    timestamp: `2024-03-20 ${String(i).padStart(2, \"0\")}:00:00`,\r\n    cpu: Math.random() * 100,\r\n    ram: Math.random() * 100,\r\n    disk: Math.random() * 100,\r\n  })\r\n);\r\n\r\nexport const networkTraffic: NetworkTraffic[] = Array.from(\r\n  { length: 24 },\r\n  (_, i) => ({\r\n    timestamp: `2024-03-20 ${String(i).padStart(2, \"0\")}:00:00`,\r\n    incoming: Math.random() * 1000,\r\n    outgoing: Math.random() * 800,\r\n  })\r\n);\r\n"],"mappings":"AA2BA,OAAO,MAAMA,MAAe,GAAG,CAC7B;EAAEC,KAAK,EAAE,UAAU;EAAEC,KAAK,EAAE;AAAE,CAAC,EAC/B;EAAED,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAE,CAAC,EAC7B;EAAED,KAAK,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAG,CAAC,CAC5B;AAED,OAAO,MAAMC,OAAqB,GAAG,CACnC;EACEC,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,qBAAqB;EAC3BC,MAAM,EAAE,QAAQ;EAChBC,EAAE,EAAE,eAAe;EACnBC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,qBAAqB;EAC3BC,MAAM,EAAE,SAAS;EACjBC,EAAE,EAAE,eAAe;EACnBC,QAAQ,EAAE,QAAQ;EAClBC,WAAW,EAAE;AACf,CAAC,EACD;EACEL,EAAE,EAAE,GAAG;EACPC,IAAI,EAAE,iBAAiB;EACvBC,MAAM,EAAE,SAAS;EACjBC,EAAE,EAAE,eAAe;EACnBC,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;AACf,CAAC,CACF;AAED,OAAO,MAAMC,aAA8B,GAAGC,KAAK,CAACC,IAAI,CACtD;EAAEC,MAAM,EAAE;AAAG,CAAC,EACd,CAACC,CAAC,EAAEC,CAAC,MAAM;EACTC,SAAS,EAAE,cAAcC,MAAM,CAACF,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ;EAC3DC,GAAG,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;EACxBC,GAAG,EAAEF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG;EACxBE,IAAI,EAAEH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;AACxB,CAAC,CACH,CAAC;AAED,OAAO,MAAMG,cAAgC,GAAGb,KAAK,CAACC,IAAI,CACxD;EAAEC,MAAM,EAAE;AAAG,CAAC,EACd,CAACC,CAAC,EAAEC,CAAC,MAAM;EACTC,SAAS,EAAE,cAAcC,MAAM,CAACF,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ;EAC3DO,QAAQ,EAAEL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI;EAC9BK,QAAQ,EAAEN,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;AAC5B,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}