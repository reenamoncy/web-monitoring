{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reena\\\\Desktop\\\\web-monitoring\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport StatsPanel from \"components/StatsPanel\";\nimport ChartCard from \"components/ChartCard\";\nimport ServerList from \"components/ServerList\";\nimport { fetchServers, fetchAlertCounts, fetchServerMetrics } from \"./services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [servers, setServers] = useState([]);\n  const [alerts, setAlerts] = useState({\n    critical: 0,\n    medium: 0,\n    low: 0\n  });\n  const [resourceUsage, setResourceUsage] = useState([]);\n  const [networkTraffic, setNetworkTraffic] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const serverData = await fetchServers(); // Fetch servers from API\n        const updatedServers = serverData.map(server => ({\n          ...server,\n          ip_address: server.ip_address || \"Unknown IP\",\n          location: server.location || \"Unknown Location\",\n          last_checked: server.last_checked || new Date().toISOString()\n        }));\n        setServers(updatedServers); // Ensure serverData matches the Server type\n      } catch (error) {\n        console.error(\"Error fetching servers:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Fetching alert counts...\"); // Debugging log\n        const alertCounts = await fetchAlertCounts();\n        console.log(\"Alert counts fetched:\", alertCounts); // Debugging log\n        setAlerts(alertCounts);\n      } catch (error) {\n        console.error(\"Error fetching alert counts:\", error);\n        setError(\"Failed to fetch alert counts. Please try again later.\");\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchResourceUsage = async () => {\n      try {\n        console.log(\"Fetching resource usage...\"); // Debugging log\n        const metrics = await fetchServerMetrics(1); // Assuming server ID 1 for now\n        console.log(\"Resource usage fetched:\", metrics); // Debugging log\n        setResourceUsage([{\n          name: \"CPU\",\n          data: metrics.cpu_usage\n        }, {\n          name: \"RAM\",\n          data: metrics.ram_usage\n        }, {\n          name: \"Disk\",\n          data: metrics.disk_usage\n        }, {\n          name: \"Application\",\n          data: metrics.application_usage\n        }]);\n      } catch (error) {\n        console.error(\"Error fetching resource usage:\", error);\n        setError(\"Failed to fetch resource usage. Please try again later.\");\n      }\n    };\n    fetchResourceUsage();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      style: styles.content,\n      children: [/*#__PURE__*/_jsxDEV(StatsPanel, {\n        alerts: alerts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Resource Monitoring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.grid,\n          children: [/*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"CPU Usage\",\n            type: \"line\",\n            data: resourceUsage,\n            dataKey: \"cpu\",\n            color: \"#3498db\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"RAM Usage\",\n            type: \"line\",\n            data: resourceUsage,\n            dataKey: \"ram\",\n            color: \"#27ae60\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"Disk Usage\",\n            type: \"bar\",\n            data: resourceUsage,\n            dataKey: \"disk\",\n            color: \"#e74c3c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ChartCard, {\n            title: \"Network Traffic\",\n            type: \"line\",\n            data: networkTraffic,\n            dataKey: \"incoming\",\n            color: \"#9b59b6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Server Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ServerList, {\n          servers: servers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"rQf8eTefymxhvolmOubQ0wS/krc=\");\n_c = App;\nconst styles = {\n  container: {\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    padding: \"2rem\"\n  },\n  content: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\"\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    gap: \"1rem\"\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","StatsPanel","ChartCard","ServerList","fetchServers","fetchAlertCounts","fetchServerMetrics","jsxDEV","_jsxDEV","App","_s","servers","setServers","alerts","setAlerts","critical","medium","low","resourceUsage","setResourceUsage","networkTraffic","setNetworkTraffic","error","setError","fetchData","serverData","updatedServers","map","server","ip_address","location","last_checked","Date","toISOString","console","log","alertCounts","fetchResourceUsage","metrics","name","data","cpu_usage","ram_usage","disk_usage","application_usage","style","color","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","styles","container","content","grid","title","type","dataKey","_c","minHeight","backgroundColor","padding","maxWidth","margin","display","gridTemplateColumns","gap","$RefreshReg$"],"sources":["C:/Users/Reena/Desktop/web-monitoring/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Header from \"components/Header\";\nimport StatsPanel from \"components/StatsPanel\";\nimport ChartCard from \"components/ChartCard\";\nimport ServerList from \"components/ServerList\";\nimport { fetchServers, Server, fetchAlertCounts, fetchServerMetrics } from \"./services/api\";\n\ninterface AlertCounts {\n  critical: number;\n  medium: number;\n  low: number;\n}\n\nconst App: React.FC = () => {\n  const [servers, setServers] = useState<Server[]>([]);\n  const [alerts, setAlerts] = useState<AlertCounts>({\n    critical: 0,\n    medium: 0,\n    low: 0,\n  });\n  const [resourceUsage, setResourceUsage] = useState<any[]>([]);\n  const [networkTraffic, setNetworkTraffic] = useState<any[]>([]);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const serverData = await fetchServers(); // Fetch servers from API\n        const updatedServers = serverData.map((server) => ({\n          ...server,\n          ip_address: server.ip_address || \"Unknown IP\",\n          location: server.location || \"Unknown Location\",\n          last_checked: server.last_checked || new Date().toISOString(),\n        }));\n        setServers(updatedServers); // Ensure serverData matches the Server type\n      } catch (error) {\n        console.error(\"Error fetching servers:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(\"Fetching alert counts...\"); // Debugging log\n        const alertCounts = await fetchAlertCounts();\n        console.log(\"Alert counts fetched:\", alertCounts); // Debugging log\n        setAlerts(alertCounts);\n      } catch (error) {\n        console.error(\"Error fetching alert counts:\", error);\n        setError(\"Failed to fetch alert counts. Please try again later.\");\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchResourceUsage = async () => {\n      try {\n        console.log(\"Fetching resource usage...\"); // Debugging log\n        const metrics = await fetchServerMetrics(1); // Assuming server ID 1 for now\n        console.log(\"Resource usage fetched:\", metrics); // Debugging log\n        setResourceUsage([\n          { name: \"CPU\", data: metrics.cpu_usage },\n          { name: \"RAM\", data: metrics.ram_usage },\n          { name: \"Disk\", data: metrics.disk_usage },\n          { name: \"Application\", data: metrics.application_usage },\n        ]);\n      } catch (error) {\n        console.error(\"Error fetching resource usage:\", error);\n        setError(\"Failed to fetch resource usage. Please try again later.\");\n      }\n    };\n\n    fetchResourceUsage();\n  }, []);\n\n  if (error) {\n    return <div style={{ color: \"red\", textAlign: \"center\" }}>{error}</div>;\n  }\n\n  return (\n    <div style={styles.container}>\n      <Header />\n      <main style={styles.content}>\n        <StatsPanel alerts={alerts} />\n        <section>\n          <h2>Resource Monitoring</h2>\n          <div style={styles.grid}>\n            <ChartCard\n              title=\"CPU Usage\"\n              type=\"line\"\n              data={resourceUsage}\n              dataKey=\"cpu\"\n              color=\"#3498db\"\n            />\n            <ChartCard\n              title=\"RAM Usage\"\n              type=\"line\"\n              data={resourceUsage}\n              dataKey=\"ram\"\n              color=\"#27ae60\"\n            />\n            <ChartCard\n              title=\"Disk Usage\"\n              type=\"bar\"\n              data={resourceUsage}\n              dataKey=\"disk\"\n              color=\"#e74c3c\"\n            />\n            <ChartCard\n              title=\"Network Traffic\"\n              type=\"line\"\n              data={networkTraffic}\n              dataKey=\"incoming\"\n              color=\"#9b59b6\"\n            />\n          </div>\n        </section>\n\n        <section>\n          <h2>Server Status</h2>\n          <ServerList servers={servers} />\n        </section>\n      </main>\n    </div>\n  );\n};\n\nconst styles = {\n  container: {\n    minHeight: \"100vh\",\n    backgroundColor: \"#f4f4f4\",\n    padding: \"2rem\",\n  },\n  content: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n  },\n  grid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr))\",\n    gap: \"1rem\",\n  },\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,SAASC,YAAY,EAAUC,gBAAgB,EAAEC,kBAAkB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5F,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAW,EAAE,CAAC;EACpD,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAc;IAChDgB,QAAQ,EAAE,CAAC;IACXC,MAAM,EAAE,CAAC;IACTC,GAAG,EAAE;EACP,CAAC,CAAC;EACF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAQ,EAAE,CAAC;EAC7D,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAQ,EAAE,CAAC;EAC/D,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAgB,IAAI,CAAC;EAEvDD,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,UAAU,GAAG,MAAMrB,YAAY,CAAC,CAAC,CAAC,CAAC;QACzC,MAAMsB,cAAc,GAAGD,UAAU,CAACE,GAAG,CAAEC,MAAM,KAAM;UACjD,GAAGA,MAAM;UACTC,UAAU,EAAED,MAAM,CAACC,UAAU,IAAI,YAAY;UAC7CC,QAAQ,EAAEF,MAAM,CAACE,QAAQ,IAAI,kBAAkB;UAC/CC,YAAY,EAAEH,MAAM,CAACG,YAAY,IAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QAC9D,CAAC,CAAC,CAAC;QACHrB,UAAU,CAACc,cAAc,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;IAEDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACd,MAAM0B,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFU,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CAAC,CAAC;QACzC,MAAMC,WAAW,GAAG,MAAM/B,gBAAgB,CAAC,CAAC;QAC5C6B,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEC,WAAW,CAAC,CAAC,CAAC;QACnDtB,SAAS,CAACsB,WAAW,CAAC;MACxB,CAAC,CAAC,OAAOd,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDC,QAAQ,CAAC,uDAAuD,CAAC;MACnE;IACF,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN1B,SAAS,CAAC,MAAM;IACd,MAAMuC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACFH,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CAAC,CAAC;QAC3C,MAAMG,OAAO,GAAG,MAAMhC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C4B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,OAAO,CAAC,CAAC,CAAC;QACjDnB,gBAAgB,CAAC,CACf;UAAEoB,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAEF,OAAO,CAACG;QAAU,CAAC,EACxC;UAAEF,IAAI,EAAE,KAAK;UAAEC,IAAI,EAAEF,OAAO,CAACI;QAAU,CAAC,EACxC;UAAEH,IAAI,EAAE,MAAM;UAAEC,IAAI,EAAEF,OAAO,CAACK;QAAW,CAAC,EAC1C;UAAEJ,IAAI,EAAE,aAAa;UAAEC,IAAI,EAAEF,OAAO,CAACM;QAAkB,CAAC,CACzD,CAAC;MACJ,CAAC,CAAC,OAAOtB,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;QACtDC,QAAQ,CAAC,yDAAyD,CAAC;MACrE;IACF,CAAC;IAEDc,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIf,KAAK,EAAE;IACT,oBAAOd,OAAA;MAAKqC,KAAK,EAAE;QAAEC,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAE1B;IAAK;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACzE;EAEA,oBACE5C,OAAA;IAAKqC,KAAK,EAAEQ,MAAM,CAACC,SAAU;IAAAN,QAAA,gBAC3BxC,OAAA,CAACR,MAAM;MAAAiD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5C,OAAA;MAAMqC,KAAK,EAAEQ,MAAM,CAACE,OAAQ;MAAAP,QAAA,gBAC1BxC,OAAA,CAACP,UAAU;QAACY,MAAM,EAAEA;MAAO;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9B5C,OAAA;QAAAwC,QAAA,gBACExC,OAAA;UAAAwC,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5B5C,OAAA;UAAKqC,KAAK,EAAEQ,MAAM,CAACG,IAAK;UAAAR,QAAA,gBACtBxC,OAAA,CAACN,SAAS;YACRuD,KAAK,EAAC,WAAW;YACjBC,IAAI,EAAC,MAAM;YACXlB,IAAI,EAAEtB,aAAc;YACpByC,OAAO,EAAC,KAAK;YACbb,KAAK,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF5C,OAAA,CAACN,SAAS;YACRuD,KAAK,EAAC,WAAW;YACjBC,IAAI,EAAC,MAAM;YACXlB,IAAI,EAAEtB,aAAc;YACpByC,OAAO,EAAC,KAAK;YACbb,KAAK,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF5C,OAAA,CAACN,SAAS;YACRuD,KAAK,EAAC,YAAY;YAClBC,IAAI,EAAC,KAAK;YACVlB,IAAI,EAAEtB,aAAc;YACpByC,OAAO,EAAC,MAAM;YACdb,KAAK,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACF5C,OAAA,CAACN,SAAS;YACRuD,KAAK,EAAC,iBAAiB;YACvBC,IAAI,EAAC,MAAM;YACXlB,IAAI,EAAEpB,cAAe;YACrBuC,OAAO,EAAC,UAAU;YAClBb,KAAK,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAEV5C,OAAA;QAAAwC,QAAA,gBACExC,OAAA;UAAAwC,QAAA,EAAI;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtB5C,OAAA,CAACL,UAAU;UAACQ,OAAO,EAAEA;QAAQ;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC1C,EAAA,CArHID,GAAa;AAAAmD,EAAA,GAAbnD,GAAa;AAuHnB,MAAM4C,MAAM,GAAG;EACbC,SAAS,EAAE;IACTO,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE,SAAS;IAC1BC,OAAO,EAAE;EACX,CAAC;EACDR,OAAO,EAAE;IACPS,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE;EACV,CAAC;EACDT,IAAI,EAAE;IACJU,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,sCAAsC;IAC3DC,GAAG,EAAE;EACP;AACF,CAAC;AAED,eAAe3D,GAAG;AAAC,IAAAmD,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}