{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Reena\\\\Desktop\\\\web-monitoring\\\\src\\\\components\\\\ChartCard.tsx\";\nimport React from \"react\";\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChartCard = ({\n  title,\n  data,\n  dataKey,\n  color\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: \"1px solid #ddd\",\n      borderRadius: \"8px\",\n      padding: \"16px\",\n      margin: \"8px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"center\",\n        color: \"#333\"\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: 300,\n      children: /*#__PURE__*/_jsxDEV(AreaChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: \"#e0e0e0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\",\n          stroke: \"#666\",\n          tick: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          stroke: \"#666\",\n          tick: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n            borderRadius: \"8px\",\n            boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\"\n          },\n          labelStyle: {\n            fontWeight: \"bold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          wrapperStyle: {\n            fontSize: 12\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Area, {\n          type: \"monotone\",\n          dataKey: dataKey,\n          stroke: color,\n          fill: color,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = ChartCard;\nexport default ChartCard;\nvar _c;\n$RefreshReg$(_c, \"ChartCard\");","map":{"version":3,"names":["React","AreaChart","Area","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","jsxDEV","_jsxDEV","ChartCard","title","data","dataKey","color","style","border","borderRadius","padding","margin","children","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","width","height","top","right","left","bottom","strokeDasharray","stroke","tick","fontSize","contentStyle","backgroundColor","boxShadow","labelStyle","fontWeight","wrapperStyle","type","fill","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/Reena/Desktop/web-monitoring/src/components/ChartCard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\ninterface ChartCardProps {\r\n  title: string;\r\n  data: Array<{ name: string; value: number }>;\r\n  dataKey: string;\r\n  color: string;\r\n  type: \"line\" | \"bar\" | \"pie\" | \"area\"; // Added 'type' property to ChartCardProps\r\n}\r\n\r\nconst ChartCard: React.FC<ChartCardProps> = ({ title, data, dataKey, color }) => {\r\n  return (\r\n    <div style={{ border: \"1px solid #ddd\", borderRadius: \"8px\", padding: \"16px\", margin: \"8px\" }}>\r\n      <h3 style={{ textAlign: \"center\", color: \"#333\" }}>{title}</h3>\r\n      <ResponsiveContainer width=\"100%\" height={300}>\r\n        <AreaChart\r\n          data={data}\r\n          margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e0e0e0\" />\r\n          <XAxis dataKey=\"name\" stroke=\"#666\" tick={{ fontSize: 12 }} />\r\n          <YAxis stroke=\"#666\" tick={{ fontSize: 12 }} />\r\n          <Tooltip\r\n            contentStyle={{\r\n              backgroundColor: \"rgba(255, 255, 255, 0.9)\",\r\n              borderRadius: \"8px\",\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.1)\",\r\n            }}\r\n            labelStyle={{ fontWeight: \"bold\" }}\r\n          />\r\n          <Legend wrapperStyle={{ fontSize: 12 }} />\r\n          <Area\r\n            type=\"monotone\"\r\n            dataKey={dataKey}\r\n            stroke={color}\r\n            fill={color}\r\n            strokeWidth={2}\r\n          />\r\n        </AreaChart>\r\n      </ResponsiveContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}